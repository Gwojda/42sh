[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m                                                                              

----------------------------------------------------------------

[37;1mminishell/binary/004-binary-test-empty-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell finds binaries that are located in the current directory when the environment variable PATH is empty.[0m

  Before test:
[38;5;239m  01: export PATH=""[0m

  STDIN:
[38;5;239m  01: write_on_stdout "TOKEN201703202355"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201703202355`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: minishell: command not found: write_on_stdout[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/005-binary-test-wrong-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  This test purpose is to check if your shell is not able to use binary with a wrong PATH
  We are changing the actual PATH by PATH=NULL
  And executing the commande ls[0m

  Before test:
[38;5;239m  01: export PATH="/"[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: minishell: command not found: ls[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/006-binary-undefined-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell retrieves the default value of the environment variable PATH if not set. This test depends on the presence of the UNIX binary `ls`, located in a path within the default environment variable PATH.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201703202355_006-BINARY-UNDEFINED-PATH"
  02: touch "TOKEN201703202355_006-BINARY-UNDEFINED-PATH"
  03: unset PATH[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201703202355_006-BINARY-UNDEFINED-PATH`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: minishell: command not found: ls[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/007-binary-permission-denied[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a non-permitted binary results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./permission_denied
  02: touch ./permission_denied
  03: chmod 0 ./permission_denied[0m

  STDIN:
[38;5;239m  01: ./permission_denied[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Pp]ermission denied`[0m
[38;5;239m  01: minishell: permission denied: ./permission_denied[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status 0[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/binary/008-binary-too-many-symbolic-links-encountered[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a path that encounters an infinite loop of symbolic link results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./symbolic_link1 ./symbolic_link2 ./symbolic_link3
  02: ln -s ./symbolic_link1 ./symbolic_link2
  03: ln -s ./symbolic_link2 ./symbolic_link3
  04: ln -s ./symbolic_link3 ./symbolic_link1[0m

  STDIN:
[38;5;239m  01: ./symbolic_link1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: minishell: ./symbolic_link1: no such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status 0[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/001-no-arg[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `cd` without any argument results in moving to the HOME directory.[0m

  STDIN:
[38;5;239m  01: cd
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/ariard/Projects/42sh/42shelltest-tmp/tmp$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/ariard:PWD`[0m
[38;5;239m  01: /Users/ariard[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/002-current-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `.` as first argument with the builtin `cd` results in not changing current directory.[0m

  STDIN:
[38;5;239m  01: cd .
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp$`[0m
[38;5;239m  01: PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/003-current-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a relative path to the current directory as argument with the builtin `cd` results in not changing the current directory. The environment variable must not be changed.[0m

  STDIN:
[38;5;239m  01: cd ../tmp
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp$`[0m
[38;5;239m  01: PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/004-parent-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `..` as first argument with the builtin `cd` results in moving to the parent directory.[0m

  STDIN:
[38;5;239m  01: cd ..
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp$`[0m
[38;5;239m  01: PWD:/Users/ariard/Projects/42sh/42shelltest-tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/005-root-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the root path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  STDIN:
[38;5;239m  01: cd /
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/$`[0m
[38;5;239m  01: PWD:/:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/006-root-path-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the root path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  STDIN:
[38;5;239m  01: cd /.
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/$`[0m
[38;5;239m  01: PWD:/:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/007-symbolic-link[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving the linked directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/symbolic_link$`[0m
[38;5;239m  01: PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/sub_directory:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/008-symbolic-link-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving to the linked directory. In this test, the directory is linked with to chained symbolic links.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link1"
  04: ln -s "./symbolic_link1" "./symbolic_link2"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link2
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/symbolic_link2$`[0m
[38;5;239m  01: PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/sub_directory:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/010-update-OLDPWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `cd` results in a modified environment variable `PWD`.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201703202355"
  02: mkdir -p "./TOKEN201703202355/TOKEN201703202355"[0m

  STDIN:
[38;5;239m  01: cd TOKEN201703202355
  02: cd TOKEN201703202355
  03: ../../display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/TOKEN201703202355/TOKEN201703202355$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^OLDPWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/TOKEN201703202355$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/011-dotdot[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that playing with relative paths with the builtin `cd` results in correctly changing the current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "playing_with_dotdot"
  02: mkdir -p "playing_with_dotdot/1/2/3/4/5/6/7/8/9/10"[0m

  STDIN:
[38;5;239m  01: cd playing_with_dotdot
  02: cd ../playing_with_dotdot
  03: cd 1/2/3/4/../4/../4/../../3/4/5/6/7/8/9/10
  04: cd ../../../../../../../../../../1/2/3/4/5
  05: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  06: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/playing_with_dotdot/1/2/3/4/5:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/playing_with_dotdot/1/2/3/4/5$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/012-dot[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that playing with relative paths to the current directory with the builtin `cd` results in not changing the current directory.[0m

  STDIN:
[38;5;239m  01: cd .
  02: cd ./
  03: cd ./.
  04: cd ././
  05: cd ./././././././././.
  06: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  07: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp$`[0m
[38;5;239m  01: PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/013-absolute-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using an absolute path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./my_sub_directory"
  02: mkdir -p "./my_sub_directory/and_another_one/"[0m

  STDIN:
[38;5;239m  01: cd /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/my_sub_directory/and_another_one
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/my_sub_directory/and_another_one:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/my_sub_directory/and_another_one$`[0m
[38;5;239m  01: PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/my_sub_directory/and_another_one:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/001-not-a-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file name as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: touch "./not_a_directory"[0m

  STDIN:
[38;5;239m  01: cd not_a_directory
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Nn]ot a directory`[0m
[38;5;239m  01: cd: no such file or directory: not_a_directory[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/002-not-a-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file name as first argument with the builtin `cd` results in a Shell termination with a failure exit status.[0m

  Before test:
[38;5;239m  01: touch "./not_a_directory"[0m

  STDIN:
[38;5;239m  01: cd not_a_directory[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: no such file or directory: not_a_directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/003-permission-denied[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a directory without any permission as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"
  03: mkdir -m 0 "./permission_denied"[0m

  STDIN:
[38;5;239m  01: cd permission_denied
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[38;5;239m  01: PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Pp]ermission denied`[0m
[38;5;239m  01: cd: no such file or directory: permission_denied[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/004-permission-denied-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a directory without any permission as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"
  03: mkdir -m 0 "./permission_denied"[0m

  STDIN:
[38;5;239m  01: cd permission_denied[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: no such file or directory: permission_denied[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/005-too-many-symbolic-links-encountered[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: cd: no such file or directory: symbolic_link1[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/006-too-many-symbolic-links-encountered-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in a Shell termination with a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: no such file or directory: symbolic_link1[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/007-no-such-file-or-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-existing path as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file_or_directory"[0m

  STDIN:
[38;5;239m  01: cd no_such_file_or_directory
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: cd: no such file or directory: no_such_file_or_directory[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/008-no-such-file-or-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-existing path as first argument with the builtin `cd` results in a Shell termination with an error status code.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file_or_directory"[0m

  STDIN:
[38;5;239m  01: cd no_such_file_or_directory[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: no such file or directory: no_such_file_or_directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/009-no-such-file-or-directory-symlink[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link that targets to a non-existing directory with the builtin `cd`  results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./enoent_symlink" "./enoent_directory"
  02: ln -s "./enoent_directory" "./enoent_symlink"[0m

  STDIN:
[38;5;239m  01: cd ./enoent_symlink
  02: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: cd: no such file or directory: ./enoent_symlink[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/010-no-such-file-or-directory-symlink-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link that targets to a non-existing directory with the builtin `cd`  results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./enoent_symlink" "./enoent_directory"
  02: ln -s "./enoent_directory" "./enoent_symlink"[0m

  STDIN:
[38;5;239m  01: cd ./enoent_symlink[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: no such file or directory: ./enoent_symlink[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/001-not-following-links[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using symbolic links twice with the builtin `cd` and the option `-P` results in a correct environment variable PWD. The option `-P` makes the Shell to resolve symbolic links.[0m

  Before test:
[38;5;239m  01: rm -fr "./sub_directory_link" "./sub_directory"
  02: mkdir -p "./sub_directory/sub_sub_directory"
  03: ln -s "./sub_directory" "./sub_directory_link"
  04: ln -s "./sub_sub_directory" "./sub_directory/sub_sub_directory_link"[0m

  STDIN:
[38;5;239m  01: cd -P sub_directory_link
  02: cd -P sub_sub_directory_link
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD=/Users/ariard/Projects/42sh/42shelltest-tmp/tmp/sub_directory/sub_sub_directory`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/002-oldpwd[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `-` as first argument with the builtin `cd` results in moving the previous current directory.[0m

  STDIN:
[38;5;239m  01: cd /
  02: cd -
  03: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/ariard/Projects/42sh/42shelltest-tmp/tmp:PWD`[0m
[38;5;239m  01: /Users/ariard/Projects/42sh/42shelltest-tmp/tmp[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/003-ignore-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the option `-i` with the builtin `env` results in an empty environment sent to the given command.[0m

  STDIN:
[38;5;239m  01: env -i ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 0`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/005-set-variables[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `env` can modify or set multiple environment variables before executing the given command.[0m

  Before test:
[38;5;239m  01: export VARTEST1="OLD_VALUE"[0m

  STDIN:
[38;5;239m  01: env VARTEST1=TOKEN201703202355_1 VARTEST2=TOKEN201703202355_2 VARTEST3=TOKEN201703202355_3 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST1=TOKEN201703202355_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST2=TOKEN201703202355_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST3=TOKEN201703202355_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/001-command-not-found[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid binary as argument results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./invalid_binary"[0m

  STDIN:
[38;5;239m  01: env ./invalid_binary[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/002-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid option results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f -- "-w"[0m

  STDIN:
[38;5;239m  01: env -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: env: illegal option -- w
  02: usage: env [-i] [-u name] [name=value]... [utility [argument...]][0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/multiple-options/001-ignore-environment-and-set-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that `env -i` works if we use a second argument to set an environment variable, we are also checking if this command unset environments variables for a given binary.[0m

  STDIN:
[38;5;239m  01: env -i TESTVARIABLE=TOKEN201703202355 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVARIABLE=TOKEN201703202355`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 1`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/003-status-of-last-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `exit` without any argument results in a Shell termination and the exit status of the previous command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: exit[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/001-too-many-args[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong number of arguments with the builtin `exit` does not result in the Shell termination but an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit 21 42
  02: ./write_on_stdout TOKEN201703202355[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201703202355`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Tt]oo many arguments|[Aa]rgument list too long)`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/002-non-numeric-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-numeric argument with the builtin `exit` results in the Shell termination and an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit abc
  02: ./write_on_stdout TOKEN201703202355[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201703202355`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[1;33m  WARNING    might_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Nn]umeric argument required`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/004-invalid-identifier[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong variable name with the builtin `setenv` (or `export`) results in error.[0m

  STDIN:
[38;5;239m  01: setenv 42
  02: export 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/misc/001-copy-of-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A Shell must send a copy of the environment to its child processes.[0m

  Before test:
[38;5;239m  01: export COPYENV_VAR1="TOKEN201703202355_VAR1"
  02: export COPYENV_VAR2="TOKEN201703202355_VAR2"
  03: export COPYENV_VAR3="TOKEN201703202355_VAR3"[0m

  STDIN:
[38;5;239m  01: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR1=TOKEN201703202355_VAR1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR2=TOKEN201703202355_VAR2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR3=TOKEN201703202355_VAR3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

Total tests: 54
Total failed tests: 38
Total pending tests: 0
